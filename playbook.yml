---
- hosts: localhost
  vars:
    aws_config_dir: "{{ansible_env.HOME}}/.aws"
    bash_profile: "{{ansible_env.HOME}}/.bash_profile"
    bashrc: "{{ansible_env.HOME}}/.bashrc"
  tasks:
    ###
    # Homebrew
    ###
    - name: updates homebrew
      homebrew: update_homebrew=yes
    - name: verifies that brew packages are present
      homebrew:
        name: "{{item}}"
        state: present
      with_items:
        - chruby
        - git
        - pwgen
    - name: updates brew packages
      homebrew:
        name: "{{item}}"
        state: latest
      with_items:
        - ansible-lint
        - awscli
        - bash-completion
        - ruby-install
        - shellcheck
        - tig
        - wget
      tags:
      - skip_ansible_lint
    - name: homebrew cleanup
      command: brew cleanup
      tags:
      - skip_ansible_lint
    ###
    # pip
    ###
    - name: updates pip packages
      pip:
        name: "{{item}}"
        extra_args: '--user'
        state: latest
      with_items:
        - pip
        - boto3
        - pylint
      tags:
      - skip_ansible_lint
    ###
    # gem
    ###
    - name: updates gem packages
      gem:
        name: "{{item}}"
        state: latest
      with_items:
        - travis-lint
      tags:
      - skip_ansible_lint
    ###
    # aws config
    ###
    - name: aws has been configured?
      stat: path="{{aws_config_dir}}"
      register: aws_config_done
    - name: creates basic aws config
      command: aws configure
      when: not aws_config_done.stat.exists
    - name: enables preview section
      lineinfile:
        path: "{{aws_config_dir}}/config"
        regexp: '^\[preview\]$'
        line: '[preview]'
        state: present
    - name: adds cloudfront into preview section
      lineinfile:
        path: "{{aws_config_dir}}/config"
        regexp: '^cloudfront = '
        line: 'cloudfront = true'
        insertafter: '^\[preview\]$'
        state: present
    ###
    # bash modifications
    ###
    - name: ~/.bashrc should exist
      copy:
        src: "/usr/local/etc/bash_completion.d/git-prompt.sh"
        dest: "{{bashrc}}"
        mode: 0755
    - name: enables chruby .bash_profile
      lineinfile:
        path: "{{bash_profile}}"
        regexp: '^source .*/chruby/{{item}}.sh$'
        line: 'source /usr/local/opt/chruby/share/chruby/{{item}}.sh'
      with_items:
         - chruby
         - auto
    - name: adds git branch into prompt
      blockinfile:
        path: "{{bash_profile}}"
        state: present
        content: |
          if [ -f "${HOME}/.bashrc" ]; then
            # shellcheck source=/dev/null
            source "${HOME}/.bashrc"
            export GIT_PS1_SHOWCOLORHINTS=true
            export PROMPT_COMMAND='__git_ps1 "\h:\w" " \\\$ "'
          fi
    ###
    # vim
    ###
    - name: create dirs for synaptic
      file: 
        path: "{{ansible_env.HOME}}/.vim/{{item}}"
        state: directory
      with_items:
      - autoload
      - bundle
    - name: installs dot config files
      file:
        src: "{{ansible_env.PWD}}/files/{{item}}"
        dest: "{{ansible_env.HOME}}/.{{item}}"
        state: link
      with_items:
      - vimrc
      - vim/autoload/pathogen.vim
    - name: install syntastic
      git:
        repo: "https://github.com/vim-syntastic/syntastic.git"
        dest: "{{ansible_env.HOME}}/.vim/bundle/syntastic"
        depth: 1

